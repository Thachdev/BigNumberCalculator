/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import Logic.Number;
import Logic.RandomNum;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author truon
 */
public class Main_Interface extends javax.swing.JFrame {

    /**
     * Creates new form Main_Interface
     */
    DefaultListModel<String> model = new DefaultListModel<>();
        
    public Main_Interface() {
        initComponents();
        listHistory.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        name = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        A = new javax.swing.JLabel();
        B = new javax.swing.JLabel();
        textNumberOfB = new javax.swing.JTextField();
        textNumberOfA = new javax.swing.JTextField();
        notificationOfA = new javax.swing.JLabel();
        notificationOfB = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        addition = new javax.swing.JButton();
        subtraction = new javax.swing.JButton();
        multiplication = new javax.swing.JButton();
        division = new javax.swing.JButton();
        calculation = new javax.swing.JLabel();
        resultOfCalculation = new javax.swing.JTextField();
        remainderName = new javax.swing.JLabel();
        numberRemainder = new javax.swing.JTextField();
        reset = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listHistory = new javax.swing.JList<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        textFeildRDNumberB = new javax.swing.JTextField();
        textFeildRDNumberA = new javax.swing.JTextField();
        buttonRDB = new javax.swing.JButton();
        buttonRDA = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        exportFile = new javax.swing.JButton();
        choseFile = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Big Number Calculator");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        name.setBackground(new java.awt.Color(255, 255, 255));
        name.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name.setText("Calculator For Big Integer Number ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(name))
        );

        A.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        A.setText("A =");

        B.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        B.setText("B =");

        textNumberOfB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        textNumberOfB.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        textNumberOfA.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        textNumberOfA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        notificationOfA.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        notificationOfA.setForeground(new java.awt.Color(255, 0, 0));

        notificationOfB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        notificationOfB.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(A)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notificationOfA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textNumberOfA)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(B)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notificationOfB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textNumberOfB))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(notificationOfA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textNumberOfA))
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(notificationOfB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(B, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textNumberOfB))
                .addContainerGap())
        );

        addition.setBackground(new java.awt.Color(204, 204, 204));
        addition.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addition.setText("A+B");
        addition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additionActionPerformed(evt);
            }
        });

        subtraction.setBackground(new java.awt.Color(204, 204, 204));
        subtraction.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        subtraction.setText("A-B");
        subtraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractionActionPerformed(evt);
            }
        });

        multiplication.setBackground(new java.awt.Color(204, 204, 204));
        multiplication.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        multiplication.setText("A*B");
        multiplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplicationActionPerformed(evt);
            }
        });

        division.setBackground(new java.awt.Color(204, 204, 204));
        division.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        division.setText("A/B");
        division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionActionPerformed(evt);
            }
        });

        calculation.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        calculation.setText("Result");

        resultOfCalculation.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        resultOfCalculation.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        remainderName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        numberRemainder.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        numberRemainder.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        reset.setBackground(new java.awt.Color(255, 153, 153));
        reset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Hitstory");

        listHistory.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(listHistory);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 9, Short.MAX_VALUE)
                        .addComponent(addition)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(subtraction)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(multiplication)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(division)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(reset)
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(calculation)
                                .addGap(20, 20, 20)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(resultOfCalculation)
                                    .addComponent(numberRemainder)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(remainderName)
                                    .addComponent(jLabel5))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addition)
                    .addComponent(subtraction)
                    .addComponent(multiplication)
                    .addComponent(division)
                    .addComponent(reset))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calculation)
                    .addComponent(resultOfCalculation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remainderName)
                    .addComponent(numberRemainder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Qty:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Qty:");

        textFeildRDNumberB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        textFeildRDNumberA.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        buttonRDB.setBackground(new java.awt.Color(204, 204, 204));
        buttonRDB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonRDB.setText("RadomB");
        buttonRDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRDBActionPerformed(evt);
            }
        });

        buttonRDA.setBackground(new java.awt.Color(204, 204, 204));
        buttonRDA.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonRDA.setText("RadomA");
        buttonRDA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRDAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textFeildRDNumberB, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textFeildRDNumberA, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonRDA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonRDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRDA)
                    .addComponent(textFeildRDNumberA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRDB)
                    .addComponent(textFeildRDNumberB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        exportFile.setBackground(new java.awt.Color(204, 204, 204));
        exportFile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        exportFile.setText("Export File");
        exportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportFileActionPerformed(evt);
            }
        });

        choseFile.setBackground(new java.awt.Color(204, 204, 204));
        choseFile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        choseFile.setText("Chose File");
        choseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choseFileActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Get data A, B from file:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Export history to file:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(choseFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exportFile, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(38, 38, 38)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(choseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(7, 7, 7)
                .addComponent(exportFile)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void additionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additionActionPerformed
        // TODO add your handling code here:
        numberRemainder.setText("");
        remainderName.setText("");
        String textA = textNumberOfA.getText();
        String textB = textNumberOfB.getText();
        boolean Aempty = false;
        boolean Bempty = false;
        if("".equals(textNumberOfA.getText())){
            Aempty = true;
            textA = "1";
        }
        if("".equals(textNumberOfB.getText())){
            Bempty = true;
            textB = "1";
        }        
        Number numberA = new Number(textA);
        Number numberB = new Number(textB);
        if(Aempty){
            notificationOfA.setText("Please provide value A!");
            resultOfCalculation.setText("");
            calculation.setText("Result");
        }else{
            if(!numberA.isIntegerList()){
                notificationOfA.setText("Please provide a valid A value!");
                resultOfCalculation.setText("");
                calculation.setText("Result");
            }else{
                notificationOfA.setText("");
            }
        }
        if(Bempty){
            notificationOfB.setText("Please provide value B!");
            resultOfCalculation.setText("");
            calculation.setText("Result");
        }else{
            if(!numberB.isIntegerList()){
                notificationOfB.setText("Please provide a valid B value!");
                resultOfCalculation.setText("");
                calculation.setText("Result");
            }else{
                notificationOfB.setText("");
            }
        }
        
        if(!Aempty && !Bempty){
            if(numberA.isIntegerList() && numberB.isIntegerList()){   
                Number numberResult = new Number();
                numberResult = Number.addition(numberA, numberB);
                resultOfCalculation.setText(numberResult.numberToString());
                calculation.setText("A+B=");
                model.add(0," ");
                model.add(0,"A+B = "+ numberResult.numberToString());
                model.add(0,"B = "+ textNumberOfB.getText());
                model.add(0,"A = "+ textNumberOfA.getText());
            }
        }else{
            resultOfCalculation.setText("");
        }
          
    }//GEN-LAST:event_additionActionPerformed

    private void subtractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractionActionPerformed
        // TODO add your handling code here:
        numberRemainder.setText("");
        remainderName.setText("");
        String textA = textNumberOfA.getText();
        String textB = textNumberOfB.getText();
        boolean Aempty = false;
        boolean Bempty = false;
        if("".equals(textNumberOfA.getText())){
            Aempty = true;
            textA = "1";
        }
        if("".equals(textNumberOfB.getText())){
            Bempty = true;
            textB = "1";
        }        
        Number numberA = new Number(textA);
        Number numberB = new Number(textB);
        if(Aempty){
            notificationOfA.setText("Please provide value A!");
            resultOfCalculation.setText("");
            calculation.setText("Result");
        }else{
            if(!numberA.isIntegerList()){
                notificationOfA.setText("Please provide a valid A value!");
                resultOfCalculation.setText("");
                calculation.setText("Result");
            }else{
                notificationOfA.setText("");
            }
        }
        if(Bempty){
            notificationOfB.setText("Please provide value B!");
            resultOfCalculation.setText("");
            calculation.setText("Result");
        }else{
            if(!numberB.isIntegerList()){
                notificationOfB.setText("Please provide a valid B value!");
                resultOfCalculation.setText("");
                calculation.setText("Result");
            }else{
                notificationOfB.setText("");
            }
        }
        
        if(!Aempty && !Bempty){
            if(numberA.isIntegerList() && numberB.isIntegerList()){
                Number numberResult = new Number();
                numberResult = Number.subtraction(numberA, numberB);
                resultOfCalculation.setText(numberResult.numberToString());
                calculation.setText("A-B=");
                model.add(0," ");
                model.add(0,"A-B = "+ numberResult.numberToString());
                model.add(0,"B = "+ textNumberOfB.getText());
                model.add(0,"A = "+ textNumberOfA.getText());
            }else{
                resultOfCalculation.setText("");
                calculation.setText("Result");
            }
        }else{
            resultOfCalculation.setText("");
            calculation.setText("Result");
        }
    }//GEN-LAST:event_subtractionActionPerformed

    private void multiplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplicationActionPerformed
        // TODO add your handling code here:   
        numberRemainder.setText("");
        remainderName.setText("");
        String textA = textNumberOfA.getText();
        String textB = textNumberOfB.getText();
        boolean Aempty = false;
        boolean Bempty = false;
        if("".equals(textNumberOfA.getText())){
            Aempty = true;
            textA = "1";
        }
        if("".equals(textNumberOfB.getText())){
            Bempty = true;
            textB = "1";
        }        
        Number numberA = new Number(textA);
        Number numberB = new Number(textB);
        if(Aempty){
            notificationOfA.setText("Please provide value A!");
            resultOfCalculation.setText("");
            calculation.setText("Result");
        }else{
            if(!numberA.isIntegerList()){
                notificationOfA.setText("Please provide a valid A value!");
                resultOfCalculation.setText("");
                calculation.setText("Result");
            }else{
                notificationOfA.setText("");
            }
        }
        if(Bempty){
            notificationOfB.setText("Please provide value B!");
            resultOfCalculation.setText("");
            calculation.setText("Result");
        }else{
            if(!numberB.isIntegerList()){
                notificationOfB.setText("Please provide a valid B value!");
                resultOfCalculation.setText("");
                calculation.setText("Result");
            }else{
                notificationOfB.setText("");
            }
        }
        if(!Aempty && !Bempty){
            if(numberA.isIntegerList() && numberB.isIntegerList()){
                Number numberResult = new Number();
                numberResult = Number.multiplication(numberA, numberB);
                resultOfCalculation.setText(numberResult.numberToString());
                calculation.setText("A*B=");
                model.add(0," ");
                model.add(0,"A*B = "+ numberResult.numberToString());
                model.add(0,"B = "+ textNumberOfB.getText());
                model.add(0,"A = "+ textNumberOfA.getText());
            }else{
                resultOfCalculation.setText("");
                calculation.setText("Result");
            }
        }else{
            resultOfCalculation.setText("");
            calculation.setText("Result");
        }       
    }//GEN-LAST:event_multiplicationActionPerformed

    private void divisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionActionPerformed
        // TODO add your handling code here:
        String textA = textNumberOfA.getText();
        String textB = textNumberOfB.getText();
        boolean Aempty = false;
        boolean Bempty = false;
        if("".equals(textNumberOfA.getText())){
            Aempty = true;
            textA = "1";
        }
        if("".equals(textNumberOfB.getText())){
            Bempty = true;
            textB = "1";
        }        
        Number numberA = new Number(textA);
        Number numberB = new Number(textB);
        if(Aempty){
            notificationOfA.setText("Please provide value A!");
            resultOfCalculation.setText("");
            calculation.setText("Result");
            numberRemainder.setText("");
            remainderName.setText("");
        }else{
            if(!numberA.isIntegerList()){
                notificationOfA.setText("Please provide a valid A value!");
                resultOfCalculation.setText("");
                calculation.setText("Result");
                numberRemainder.setText("");
                remainderName.setText("");
            }else{
                notificationOfA.setText("");
                numberRemainder.setText("");
                remainderName.setText("");
            }
        }
        if(Bempty){
            notificationOfB.setText("Please provide value B!");
            resultOfCalculation.setText("");
            calculation.setText("Result");
            numberRemainder.setText("");
            remainderName.setText("");
        }else{
            if(!numberB.isIntegerList()){
                notificationOfB.setText("Please provide a valid B value!");
                resultOfCalculation.setText("");
                calculation.setText("Result");
                numberRemainder.setText("");
                remainderName.setText("");
            }else{
                notificationOfB.setText("");
                numberRemainder.setText("");
                remainderName.setText("");
            }
        }
        if(Number.checkZero(numberB)){
            notificationOfB.setText("B value CANNOT be 0 !");
        }
        if(!Aempty && !Bempty && !Number.checkZero(numberB)){
            if(numberA.isIntegerList() && numberB.isIntegerList()){
                Number numberResult = new Number();
                Number numberAA = new Number(numberA);
                Number numberBB = new Number(numberB);
                numberResult = Number.div(numberA,numberB);
                numberRemainder.setText(Number.remainderNumber(numberResult,numberAA,numberBB).numberToString());
                resultOfCalculation.setText(numberResult.numberToString());
                calculation.setText("A/B=");
                remainderName.setText("Rem");
                
                model.add(0," ");
                model.add(0,"Rem = "+ numberRemainder.getText());
                model.add(0,"A/B = "+ numberResult.numberToString());
                model.add(0,"B = "+ textNumberOfB.getText());
                model.add(0,"A = "+ textNumberOfA.getText());
            }else{
                resultOfCalculation.setText("");
                calculation.setText("Result");
                numberRemainder.setText("");
                remainderName.setText("");
            }
        }else{
            resultOfCalculation.setText("");
            calculation.setText("Result");
            numberRemainder.setText("");
            remainderName.setText("");
        }
    }//GEN-LAST:event_divisionActionPerformed

    private void choseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choseFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter txt = new FileNameExtensionFilter("Text files (.txt)", "txt");
        fileChooser.setFileFilter(txt);
        fileChooser.setMultiSelectionEnabled(false);
        File file = null;
        String num1 = "";
        String num2 = "";

        int x = fileChooser.showOpenDialog(this);
        if (x == JFileChooser.APPROVE_OPTION) {
            file = fileChooser.getSelectedFile();

            try {
                try (BufferedReader br = new BufferedReader(new FileReader(file))) {
                    num1 = br.readLine();
                    num2 = br.readLine();
                }
            } catch (IOException e) {
            }
        }

        textNumberOfA.setText(num1);
        textNumberOfB.setText(num2);

    }//GEN-LAST:event_choseFileActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        textNumberOfA.setText("");
        textNumberOfB.setText("");
        resultOfCalculation.setText("");
        numberRemainder.setText("");
        textFeildRDNumberA.setText("");
        textFeildRDNumberB.setText("");
        notificationOfA.setText("");
        notificationOfB.setText("");
        remainderName.setText("");
        calculation.setText("Result");
        
    }//GEN-LAST:event_resetActionPerformed

    private void exportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter txtFilter = new FileNameExtensionFilter("Text Files (.txt)", "txt");
        fileChooser.setFileFilter(txtFilter);
        int result = fileChooser.showSaveDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();

            // Đảm bảo rằng tên tệp tin kết thúc bằng ".txt"
            String filePath = selectedFile.getAbsolutePath();
            if (!filePath.endsWith(".txt")) {
                selectedFile = new File(filePath + ".txt");
            }

            try {
                try (FileWriter fileWriter = new FileWriter(selectedFile)) {
                    
                    for (int i = 0; i < model.getSize(); i++) {
                        String item = model.getElementAt(i);
                        fileWriter.write(item);
                        fileWriter.write("\n");
                    }
                }
                selectedFile.getAbsolutePath();
            } catch (IOException e) {
            }
        }
    }//GEN-LAST:event_exportFileActionPerformed

    private void buttonRDAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRDAActionPerformed
        // TODO add your handling code here:
        String sA = textFeildRDNumberA.getText();
        RandomNum numA = new RandomNum(sA);
        if(numA.isNumeric() && numA.notNegativeNum()){
            notificationOfA.setText("");
            sA = numA.num();
            textNumberOfA.setText(sA);
        }else{
            notificationOfA.setText("Number random for A is wrong!");
            textNumberOfA.setText("");
        }
        if ("".equals(sA)){
            notificationOfA.setText("");
            textNumberOfA.setText("");
        }
    }//GEN-LAST:event_buttonRDAActionPerformed

    private void buttonRDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRDBActionPerformed
        // TODO add your handling code here:
        String sB = textFeildRDNumberB.getText();
        RandomNum numB = new RandomNum(sB);
        if(numB.isNumeric() && numB.notNegativeNum()){
            notificationOfB.setText("");
            sB = numB.num();
            textNumberOfB.setText(sB);
        }else{
            notificationOfB.setText("Number random for B is wrong!");
            textNumberOfB.setText("");
        }
        if ("".equals(sB)){
            notificationOfB.setText("");
            textNumberOfB.setText("");
        }   
    }//GEN-LAST:event_buttonRDBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main_Interface().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel A;
    private javax.swing.JLabel B;
    private javax.swing.JButton addition;
    private javax.swing.JButton buttonRDA;
    private javax.swing.JButton buttonRDB;
    private javax.swing.JLabel calculation;
    private javax.swing.JButton choseFile;
    private javax.swing.JButton division;
    private javax.swing.JButton exportFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listHistory;
    private javax.swing.JButton multiplication;
    private javax.swing.JLabel name;
    private javax.swing.JLabel notificationOfA;
    private javax.swing.JLabel notificationOfB;
    private javax.swing.JTextField numberRemainder;
    private javax.swing.JLabel remainderName;
    private javax.swing.JButton reset;
    private javax.swing.JTextField resultOfCalculation;
    private javax.swing.JButton subtraction;
    private javax.swing.JTextField textFeildRDNumberA;
    private javax.swing.JTextField textFeildRDNumberB;
    private javax.swing.JTextField textNumberOfA;
    private javax.swing.JTextField textNumberOfB;
    // End of variables declaration//GEN-END:variables
}
